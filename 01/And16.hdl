CHIP And16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    And(a=a[0] , b=b[0] , out=out[0] );
    And(a=a[1] , b=b[1] , out=out[1] );
    And(a=a[2] , b=b[2] , out=out[2] );
    And(a=a[3] , b=b[3] , out=out[3] );
    And(a=a[4] , b=b[4] , out=out[4] );
    And(a=a[5] , b=b[5] , out=out[5] );
    And(a=a[6] , b=b[6] , out=out[6] );
    And(a=a[7] , b=b[7] , out=out[7] );
    And(a=a[8] , b=b[8] , out=out[8] );
    And(a=a[9] , b=b[9] , out=out[9] );
    And(a=a[10] , b=b[10] , out=out[10] );
    And(a=a[11] , b=b[11] , out=out[11] );
    And(a=a[12] , b=b[12] , out=out[12] );
    And(a=a[13] , b=b[13] , out=out[13] );
    And(a=a[14] , b=b[14] , out=out[14] );
    And(a=a[15] , b=b[15] , out=out[15] );
}

CHIP Or16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    Or(a=a[0] , b=b[0] , out=out[0] );
    Or(a=a[1] , b=b[1] , out=out[1] );
    Or(a=a[2] , b=b[2] , out=out[2] );
    Or(a=a[3] , b=b[3] , out=out[3] );
    Or(a=a[4] , b=b[4] , out=out[4] );
    Or(a=a[5] , b=b[5] , out=out[5] );
    Or(a=a[6] , b=b[6] , out=out[6] );
    Or(a=a[7] , b=b[7] , out=out[7] );
    Or(a=a[8] , b=b[8] , out=out[8] );
    Or(a=a[9] , b=b[9] , out=out[9] );
    Or(a=a[10] , b=b[10] , out=out[10] );
    Or(a=a[11] , b=b[11] , out=out[11] );
    Or(a=a[12] , b=b[12] , out=out[12] );
    Or(a=a[13] , b=b[13] , out=out[13] );
    Or(a=a[14] , b=b[14] , out=out[14] );
    Or(a=a[15] , b=b[15] , out=out[15] );
}

CHIP Mux16 {
    IN a[16], b[16], sel;
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    Mux(a=a[0], b=b[0] , sel=sel , out=out[0] );
    Mux(a=a[1], b=b[1] , sel=sel , out=out[1] );
    Mux(a=a[2], b=b[2] , sel=sel , out=out[2] );
    Mux(a=a[3], b=b[3] , sel=sel , out=out[3] );
    Mux(a=a[4], b=b[4] , sel=sel , out=out[4] );
    Mux(a=a[5], b=b[5] , sel=sel , out=out[5] );
    Mux(a=a[6], b=b[6] , sel=sel , out=out[6] );
    Mux(a=a[7], b=b[7] , sel=sel , out=out[7] );
    Mux(a=a[8], b=b[8] , sel=sel , out=out[8] );
    Mux(a=a[9], b=b[9] , sel=sel , out=out[9] );
    Mux(a=a[10], b=b[10] , sel=sel , out=out[10] );
    Mux(a=a[11], b=b[11] , sel=sel , out=out[11] );
    Mux(a=a[12], b=b[12] , sel=sel , out=out[12] );
    Mux(a=a[13], b=b[13] , sel=sel , out=out[13] );
    Mux(a=a[14], b=b[14] , sel=sel , out=out[14] );
    Mux(a=a[15], b=b[15] , sel=sel , out=out[15] );
}

CHIP Or8Way {
    IN in[8];
    OUT out;

    PARTS:
    //// Replace this comment with your code.
    Or(a=in[0] , b=in[1] , out=orComp1 );
    Or(a=in[2] , b=in[3] , out=orComp2 );
    Or(a=in[4] , b=in[5] , out=orComp3 );
    Or(a=in[6] , b=in[7] , out=orComp4 );
    Or(a=orComp1 , b=orComp2 , out=orComp5 );
    Or(a=orComp3 , b=orComp4 , out=orComp6 );
    Or(a=orComp5 , b=orComp6 , out=out );
}